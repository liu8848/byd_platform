<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.platform.mapper.EmployeeMapper">
    <resultMap id="employee" type="com.platform.entity.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="grade" property="grade"/>
        <result column="gender" property="gender"/>
        <result column="education" property="education"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="bu_id" property="buId"/>
        <result column="factory_id" property="factoryId"/>
        <result column="department_id" property="departmentId"/>
        <result column="location_id" property="locationId"/>
        <result column="create_time" property="createTime"/>
        <result column="create_user" property="createUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_user" property="updateUser"/>
        <association property="department" javaType="com.platform.entity.Department">
            <id column="d_id" property="id"/>
            <result column="d_name" property="name"/>
            <association property="factory" javaType="com.platform.entity.Factory">
                <id column="f_id" property="id"/>
                <result column="f_name" property="name"/>
                <result column="f_level" property="level"/>
                <association property="bu" javaType="com.platform.entity.BusinessDivision">
                    <id column="bu_id" property="buId"/>
                    <result column="bu_name" property="buName"/>
                </association>
            </association>
        </association>
    </resultMap>


    <select id="getAll" resultType="com.platform.vo.EmployeeDisplayVo">
        select e.id,
               e.name,
               e.grade,
               e.gender,
               e.education,
               e.email,
               e.phone,
               f.name factoryName,
               d.name departmentName,
               l.name locationName,
               e.create_time,
               e.update_time,
               e.create_user,
               e.update_user
        from employee e
                 left join factory f on e.factory_id = f.id
                 left join department d on e.department_id = d.id
                 left join location l on e.location_id = l.id
    </select>

    <select id="getById" resultMap="employee">
        select e.*,
               d.id    d_id,
               d.name  d_name,
               f.id    f_id,
               f.level f_level,
               bu.bu_id,
               bu.bu_name
        from employee e
                 left join department d on e.department_id = d.id
                 left join factory f on d.factory_id = f.id
                 left join BusinessDivision bu on f.bu_id = bu.bu_id
        where e.id = #{id}
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into employee(name, grade, gender, education, email, phone, work_status, factory_id, department_id,
                             location_id, create_time, create_user, update_time, update_user)
        values (#{name}, #{grade}, #{gender}, #{education}, #{email}, #{phone}, #{workStatus}, #{factoryId},
                #{departmentId}, #{locationId}, #{createTime}, #{createUser}, #{updateTime}, #{updateUser})
    </insert>

    <insert id="importEmployee">
        insert into employee(id,name, grade, gender, education, email, work_status, factory_id, department_id,
                             location_id, create_time, create_user, update_time, update_user)
        VALUES
        <foreach collection="employees" item="item" separator=",">
            (#{item.id},#{item.name},#{item.grade},#{item.gender},#{item.education},{item.email},#{item.workStatus},#{item.factoryId},#{item.departmentId},
             #{item.locationId},#{item.createTime},#{item.createUser},#{item.updateTime},#{item.updateUser})
        </foreach>
    </insert>

    <update id="updateEmployee" parameterType="com.platform.entity.Employee">
        update employee
        <set>
            <if test="name!=null and name!=''">name=#{name},</if>
            <if test="grade!=null and grade!=0">grade=#{grade},</if>
            <if test="education!=null and education!=0">education=#{education},</if>
            <if test="phone!=null and phone!=''">phone=#{phone},</if>
            <if test="email!=null and email!=''">email=#{email},</if>
            <if test="workStatus !=null and workStatus!=0">work_status=#{workStatus},</if>
            <if test="buId!=null and buId!=0">bu_id=#{buId},</if>
            <if test="factoryId!=null and factoryId!=0">factory_id=#{factoryId},</if>
            <if test="departmentId!=null and departmentId!=0">department_id=#{departmentId},</if>
            <if test="locationId!=null and location_id!=0">location_id=#{locationId},</if>
            update_time=#{updateTime},
            update_user=#{updateUser}
        </set>
        where id=#{id}
    </update>
</mapper>